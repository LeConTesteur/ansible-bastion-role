*filter
:ufw-user-input - [0:0]
:ufw-user-output - [0:0]
:ufw-user-forward - [0:0]
:ufw-before-logging-input - [0:0]
:ufw-before-logging-output - [0:0]
:ufw-before-logging-forward - [0:0]
:ufw-user-logging-input - [0:0]
:ufw-user-logging-output - [0:0]
:ufw-user-logging-forward - [0:0]
:ufw-after-logging-input - [0:0]
:ufw-after-logging-output - [0:0]
:ufw-after-logging-forward - [0:0]
:ufw-logging-deny - [0:0]
:ufw-logging-allow - [0:0]
:ufw-user-limit - [0:0]
:ufw-user-limit-accept - [0:0]
### RULES ###

### tuple ### allow tcp 22 0.0.0.0/0 any 0.0.0.0/0 in_eth0
-A ufw-user-input -i eth0 -p tcp --dport 22 -j ACCEPT
### tuple ### allow tcp 22 1.1.1.0/24 any 0.0.0.0/0 out_eth1
-A ufw-user-output -o eth1 -p tcp -d 1.1.1.0/24 --dport 22 -j ACCEPT
### tuple ### allow:route tcp 22 0.0.0.0/0 any 0.0.0.0/0 in_eth0
-A ufw-user-forward -i eth0 -p tcp --dport 22 -j ACCEPT

{%for rule in bastion_public_port_rules%}
### tuple ### allow tcp {{rule.port}} {{host_ip}} any 0.0.0.0/0 in_eth0
-A ufw-user-input -i eth0 -p tcp -d {{host_ip}} --dport {{rule.port}} -j ACCEPT
### tuple ### route:allow tcp {{rule.target_port}} {{rule.target_ip}} any 0.0.0.0/0 in_eth0
-A ufw-user-forward -i eth0 -p tcp -d {{rule.target_ip}} --dport {{rule.target_port}} -j ACCEPT
{%endfor%}


{%for rule in bastion_internal_service_port_rules%}
### tuple ### allow tcp {{rule.port}} {{host_ip}} any 0.0.0.0/0 in_eth1
-A ufw-user-input -i eth1 -p tcp -d {{host_ip}} --dport {{rule.port}} -j ACCEPT
### tuple ### route:allow tcp {{rule.target_port}} {{rule.target_ip}} any 0.0.0.0/0 in_eth1
-A ufw-user-forward -i eth1 -p tcp -d {{rule.target_ip}} --dport {{rule.target_port}} -j ACCEPT
{%endfor%}

{%for rule in bastion_internal_service_ip_rules%}
{%for port in rule.ports%}
### tuple ### allow tcp {{port}} {{rule.ip}} any 0.0.0.0/0 in_eth1
-A ufw-user-input -i eth1 -p tcp -d {{rule.ip}} --dport {{port}} -j ACCEPT
### tuple ### route:allow tcp {{port}} {{rule.target_ip}} any 0.0.0.0/0 in_eth1 
-A ufw-user-forward -i eth1 -p tcp -d {{rule.target_ip}} --dport {{port}} -j ACCEPT
{%endfor%}
{%endfor%}

### END RULES ###

### LOGGING ###
-A ufw-after-logging-input -j LOG --log-prefix "[UFW BLOCK] " -m limit --limit 3/min --limit-burst 10
-A ufw-after-logging-forward -j LOG --log-prefix "[UFW BLOCK] " -m limit --limit 3/min --limit-burst 10
-I ufw-logging-deny -m conntrack --ctstate INVALID -j RETURN -m limit --limit 3/min --limit-burst 10
-A ufw-logging-deny -j LOG --log-prefix "[UFW BLOCK] " -m limit --limit 3/min --limit-burst 10
-A ufw-logging-allow -j LOG --log-prefix "[UFW ALLOW] " -m limit --limit 3/min --limit-burst 10
### END LOGGING ###

### RATE LIMITING ###
-A ufw-user-limit -m limit --limit 3/minute -j LOG --log-prefix "[UFW LIMIT BLOCK] "
-A ufw-user-limit -j REJECT
-A ufw-user-limit-accept -j ACCEPT
### END RATE LIMITING ###
COMMIT